//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenSilver.Simulator.LicensingServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastLoginDateField;
        
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        private bool IsNewsLetterWantedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreationDateField, value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLoginDateField, value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((object.ReferenceEquals(this.DateOfBirthField, value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool IsNewsLetterWanted {
            get {
                return this.IsNewsLetterWantedField;
            }
            set {
                if ((this.IsNewsLetterWantedField.Equals(value) != true)) {
                    this.IsNewsLetterWantedField = value;
                    this.RaisePropertyChanged("IsNewsLetterWanted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseKey", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class LicenseKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        private bool IsActivatedField;
        
        private bool IsProfessionalEditionField;
        
        private bool IsSlMigrationEditionField;
        
        private bool IsEnterpriseEditionField;
        
        private bool IsSubscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastActivationComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastActivationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawFreeUpdatesUntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSubscriptionValidUntilField;
        
        private int NbOfMonthsPaidSoFarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubscriptionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawPurchaseDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentGrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawPaymentDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGuidField, value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool IsActivated {
            get {
                return this.IsActivatedField;
            }
            set {
                if ((this.IsActivatedField.Equals(value) != true)) {
                    this.IsActivatedField = value;
                    this.RaisePropertyChanged("IsActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsProfessionalEdition {
            get {
                return this.IsProfessionalEditionField;
            }
            set {
                if ((this.IsProfessionalEditionField.Equals(value) != true)) {
                    this.IsProfessionalEditionField = value;
                    this.RaisePropertyChanged("IsProfessionalEdition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool IsSlMigrationEdition {
            get {
                return this.IsSlMigrationEditionField;
            }
            set {
                if ((this.IsSlMigrationEditionField.Equals(value) != true)) {
                    this.IsSlMigrationEditionField = value;
                    this.RaisePropertyChanged("IsSlMigrationEdition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool IsEnterpriseEdition {
            get {
                return this.IsEnterpriseEditionField;
            }
            set {
                if ((this.IsEnterpriseEditionField.Equals(value) != true)) {
                    this.IsEnterpriseEditionField = value;
                    this.RaisePropertyChanged("IsEnterpriseEdition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool IsSubscription {
            get {
                return this.IsSubscriptionField;
            }
            set {
                if ((this.IsSubscriptionField.Equals(value) != true)) {
                    this.IsSubscriptionField = value;
                    this.RaisePropertyChanged("IsSubscription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string LastActivationComputerName {
            get {
                return this.LastActivationComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastActivationComputerNameField, value) != true)) {
                    this.LastActivationComputerNameField = value;
                    this.RaisePropertyChanged("LastActivationComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string LastActivationDate {
            get {
                return this.LastActivationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastActivationDateField, value) != true)) {
                    this.LastActivationDateField = value;
                    this.RaisePropertyChanged("LastActivationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string RawFreeUpdatesUntil {
            get {
                return this.RawFreeUpdatesUntilField;
            }
            set {
                if ((object.ReferenceEquals(this.RawFreeUpdatesUntilField, value) != true)) {
                    this.RawFreeUpdatesUntilField = value;
                    this.RaisePropertyChanged("RawFreeUpdatesUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string RawSubscriptionValidUntil {
            get {
                return this.RawSubscriptionValidUntilField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSubscriptionValidUntilField, value) != true)) {
                    this.RawSubscriptionValidUntilField = value;
                    this.RaisePropertyChanged("RawSubscriptionValidUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int NbOfMonthsPaidSoFar {
            get {
                return this.NbOfMonthsPaidSoFarField;
            }
            set {
                if ((this.NbOfMonthsPaidSoFarField.Equals(value) != true)) {
                    this.NbOfMonthsPaidSoFarField = value;
                    this.RaisePropertyChanged("NbOfMonthsPaidSoFar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string SubscriptionID {
            get {
                return this.SubscriptionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriptionIDField, value) != true)) {
                    this.SubscriptionIDField = value;
                    this.RaisePropertyChanged("SubscriptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string RawPurchaseDetails {
            get {
                return this.RawPurchaseDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RawPurchaseDetailsField, value) != true)) {
                    this.RawPurchaseDetailsField = value;
                    this.RaisePropertyChanged("RawPurchaseDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string PaymentTransactionId {
            get {
                return this.PaymentTransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTransactionIdField, value) != true)) {
                    this.PaymentTransactionIdField = value;
                    this.RaisePropertyChanged("PaymentTransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string PaymentGross {
            get {
                return this.PaymentGrossField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentGrossField, value) != true)) {
                    this.PaymentGrossField = value;
                    this.RaisePropertyChanged("PaymentGross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string PaymentCurrency {
            get {
                return this.PaymentCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentCurrencyField, value) != true)) {
                    this.PaymentCurrencyField = value;
                    this.RaisePropertyChanged("PaymentCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string RawPaymentDate {
            get {
                return this.RawPaymentDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RawPaymentDateField, value) != true)) {
                    this.RawPaymentDateField = value;
                    this.RaisePropertyChanged("RawPaymentDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyActivationResult", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class KeyActivationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OpenSilver.Simulator.LicensingServiceReference.ArrayOfString KeyFeaturesField;
        
        private System.DateTime ValidityLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public OpenSilver.Simulator.LicensingServiceReference.ArrayOfString KeyFeatures {
            get {
                return this.KeyFeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyFeaturesField, value) != true)) {
                    this.KeyFeaturesField = value;
                    this.RaisePropertyChanged("KeyFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ValidityLimit {
            get {
                return this.ValidityLimitField;
            }
            set {
                if ((this.ValidityLimitField.Equals(value) != true)) {
                    this.ValidityLimitField = value;
                    this.RaisePropertyChanged("ValidityLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyValidity", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class KeyValidity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private OpenSilver.Simulator.LicensingServiceReference.KeyState StateField;
        
        private System.DateTime ValidityLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public OpenSilver.Simulator.LicensingServiceReference.KeyState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ValidityLimit {
            get {
                return this.ValidityLimitField;
            }
            set {
                if ((this.ValidityLimitField.Equals(value) != true)) {
                    this.ValidityLimitField = value;
                    this.RaisePropertyChanged("ValidityLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyState", Namespace="http://tempuri.org/")]
    public enum KeyState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlmostExpired = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RawDate {
            get {
                return this.RawDateField;
            }
            set {
                if ((object.ReferenceEquals(this.RawDateField, value) != true)) {
                    this.RawDateField = value;
                    this.RaisePropertyChanged("RawDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FriendlyDescription {
            get {
                return this.FriendlyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyDescriptionField, value) != true)) {
                    this.FriendlyDescriptionField = value;
                    this.RaisePropertyChanged("FriendlyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string InvoiceAddress {
            get {
                return this.InvoiceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceAddressField, value) != true)) {
                    this.InvoiceAddressField = value;
                    this.RaisePropertyChanged("InvoiceAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityLog", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ActivityLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LicensingServiceReference.ILicensingService")]
    public interface ILicensingService {
        
        // CODEGEN: Generating message contract since element name username from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/LogIn", ReplyAction="http://tempuri.org/ILicensingService/LogInResponse")]
        OpenSilver.Simulator.LicensingServiceReference.LogInResponse LogIn(OpenSilver.Simulator.LicensingServiceReference.LogInRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/LogIn", ReplyAction="http://tempuri.org/ILicensingService/LogInResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogInResponse> LogInAsync(OpenSilver.Simulator.LicensingServiceReference.LogInRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/LogOut", ReplyAction="http://tempuri.org/ILicensingService/LogOutResponse")]
        OpenSilver.Simulator.LicensingServiceReference.LogOutResponse LogOut(OpenSilver.Simulator.LicensingServiceReference.LogOutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/LogOut", ReplyAction="http://tempuri.org/ILicensingService/LogOutResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogOutResponse> LogOutAsync(OpenSilver.Simulator.LicensingServiceReference.LogOutRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetCurrentUserInformation", ReplyAction="http://tempuri.org/ILicensingService/GetCurrentUserInformationResponse")]
        OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse GetCurrentUserInformation(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetCurrentUserInformation", ReplyAction="http://tempuri.org/ILicensingService/GetCurrentUserInformationResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse> GetCurrentUserInformationAsync(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest request);
        
        // CODEGEN: Generating message contract since element name user from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ModifyCurrentUserInformation", ReplyAction="http://tempuri.org/ILicensingService/ModifyCurrentUserInformationResponse")]
        OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse ModifyCurrentUserInformation(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ModifyCurrentUserInformation", ReplyAction="http://tempuri.org/ILicensingService/ModifyCurrentUserInformationResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse> ModifyCurrentUserInformationAsync(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest request);
        
        // CODEGEN: Generating message contract since element name oldPassword from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ChangePassword", ReplyAction="http://tempuri.org/ILicensingService/ChangePasswordResponse")]
        OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse ChangePassword(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ChangePassword", ReplyAction="http://tempuri.org/ILicensingService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse> ChangePasswordAsync(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetKeys", ReplyAction="http://tempuri.org/ILicensingService/GetKeysResponse")]
        OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse GetKeys(OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetKeys", ReplyAction="http://tempuri.org/ILicensingService/GetKeysResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse> GetKeysAsync(OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest request);
        
        // CODEGEN: Generating message contract since element name keyID from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/DeactivateKey", ReplyAction="http://tempuri.org/ILicensingService/DeactivateKeyResponse")]
        OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse DeactivateKey(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/DeactivateKey", ReplyAction="http://tempuri.org/ILicensingService/DeactivateKeyResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse> DeactivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest request);
        
        // CODEGEN: Generating message contract since element name keyGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ActivateKey", ReplyAction="http://tempuri.org/ILicensingService/ActivateKeyResponse")]
        OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse ActivateKey(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ActivateKey", ReplyAction="http://tempuri.org/ILicensingService/ActivateKeyResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse> ActivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest request);
        
        // CODEGEN: Generating message contract since element name keyGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ActivateKey_V2", ReplyAction="http://tempuri.org/ILicensingService/ActivateKey_V2Response")]
        OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response ActivateKey_V2(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/ActivateKey_V2", ReplyAction="http://tempuri.org/ILicensingService/ActivateKey_V2Response")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response> ActivateKey_V2Async(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request request);
        
        // CODEGEN: Generating message contract since element name computerName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/CheckLicenseValidity", ReplyAction="http://tempuri.org/ILicensingService/CheckLicenseValidityResponse")]
        OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse CheckLicenseValidity(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/CheckLicenseValidity", ReplyAction="http://tempuri.org/ILicensingService/CheckLicenseValidityResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse> CheckLicenseValidityAsync(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetTransactions", ReplyAction="http://tempuri.org/ILicensingService/GetTransactionsResponse")]
        OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse GetTransactions(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/GetTransactions", ReplyAction="http://tempuri.org/ILicensingService/GetTransactionsResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse> GetTransactionsAsync(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest request);
        
        // CODEGEN: Generating message contract since element name email from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/HandlePasswordForgotten", ReplyAction="http://tempuri.org/ILicensingService/HandlePasswordForgottenResponse")]
        OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse HandlePasswordForgotten(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/HandlePasswordForgotten", ReplyAction="http://tempuri.org/ILicensingService/HandlePasswordForgottenResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse> HandlePasswordForgottenAsync(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetListOfUsers", ReplyAction="http://tempuri.org/ILicensingService/AdminGetListOfUsersResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse AdminGetListOfUsers(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetListOfUsers", ReplyAction="http://tempuri.org/ILicensingService/AdminGetListOfUsersResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse> AdminGetListOfUsersAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminUpdatePassword", ReplyAction="http://tempuri.org/ILicensingService/AdminUpdatePasswordResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse AdminUpdatePassword(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminUpdatePassword", ReplyAction="http://tempuri.org/ILicensingService/AdminUpdatePasswordResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse> AdminUpdatePasswordAsync(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminEditUser", ReplyAction="http://tempuri.org/ILicensingService/AdminEditUserResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse AdminEditUser(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminEditUser", ReplyAction="http://tempuri.org/ILicensingService/AdminEditUserResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse> AdminEditUserAsync(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminCreateUser", ReplyAction="http://tempuri.org/ILicensingService/AdminCreateUserResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse AdminCreateUser(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminCreateUser", ReplyAction="http://tempuri.org/ILicensingService/AdminCreateUserResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse> AdminCreateUserAsync(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetKeys", ReplyAction="http://tempuri.org/ILicensingService/AdminGetKeysResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse AdminGetKeys(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetKeys", ReplyAction="http://tempuri.org/ILicensingService/AdminGetKeysResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse> AdminGetKeysAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetTransactions", ReplyAction="http://tempuri.org/ILicensingService/AdminGetTransactionsResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse AdminGetTransactions(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetTransactions", ReplyAction="http://tempuri.org/ILicensingService/AdminGetTransactionsResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse> AdminGetTransactionsAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminDeactivateKey", ReplyAction="http://tempuri.org/ILicensingService/AdminDeactivateKeyResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse AdminDeactivateKey(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminDeactivateKey", ReplyAction="http://tempuri.org/ILicensingService/AdminDeactivateKeyResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse> AdminDeactivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminCreateKey", ReplyAction="http://tempuri.org/ILicensingService/AdminCreateKeyResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse AdminCreateKey(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminCreateKey", ReplyAction="http://tempuri.org/ILicensingService/AdminCreateKeyResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse> AdminCreateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminEditKey", ReplyAction="http://tempuri.org/ILicensingService/AdminEditKeyResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse AdminEditKey(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminEditKey", ReplyAction="http://tempuri.org/ILicensingService/AdminEditKeyResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse> AdminEditKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest request);
        
        // CODEGEN: Generating message contract since element name sessionGuid from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetActivityLogs", ReplyAction="http://tempuri.org/ILicensingService/AdminGetActivityLogsResponse")]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse AdminGetActivityLogs(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicensingService/AdminGetActivityLogs", ReplyAction="http://tempuri.org/ILicensingService/AdminGetActivityLogsResponse")]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse> AdminGetActivityLogsAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogInRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogIn", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LogInRequestBody Body;
        
        public LogInRequest() {
        }
        
        public LogInRequest(OpenSilver.Simulator.LicensingServiceReference.LogInRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogInRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public LogInRequestBody() {
        }
        
        public LogInRequestBody(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogInResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogInResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LogInResponseBody Body;
        
        public LogInResponse() {
        }
        
        public LogInResponse(OpenSilver.Simulator.LicensingServiceReference.LogInResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogInResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string LogInResult;
        
        public LogInResponseBody() {
        }
        
        public LogInResponseBody(string LogInResult) {
            this.LogInResult = LogInResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogOutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogOut", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LogOutRequestBody Body;
        
        public LogOutRequest() {
        }
        
        public LogOutRequest(OpenSilver.Simulator.LicensingServiceReference.LogOutRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class LogOutRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public LogOutRequestBody() {
        }
        
        public LogOutRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogOutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogOutResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LogOutResponseBody Body;
        
        public LogOutResponse() {
        }
        
        public LogOutResponse(OpenSilver.Simulator.LicensingServiceReference.LogOutResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class LogOutResponseBody {
        
        public LogOutResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentUserInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCurrentUserInformation", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequestBody Body;
        
        public GetCurrentUserInformationRequest() {
        }
        
        public GetCurrentUserInformationRequest(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCurrentUserInformationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public GetCurrentUserInformationRequestBody() {
        }
        
        public GetCurrentUserInformationRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentUserInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCurrentUserInformationResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponseBody Body;
        
        public GetCurrentUserInformationResponse() {
        }
        
        public GetCurrentUserInformationResponse(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetCurrentUserInformationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.User GetCurrentUserInformationResult;
        
        public GetCurrentUserInformationResponseBody() {
        }
        
        public GetCurrentUserInformationResponseBody(OpenSilver.Simulator.LicensingServiceReference.User GetCurrentUserInformationResult) {
            this.GetCurrentUserInformationResult = GetCurrentUserInformationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ModifyCurrentUserInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ModifyCurrentUserInformation", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequestBody Body;
        
        public ModifyCurrentUserInformationRequest() {
        }
        
        public ModifyCurrentUserInformationRequest(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ModifyCurrentUserInformationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.User user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sessionGuid;
        
        public ModifyCurrentUserInformationRequestBody() {
        }
        
        public ModifyCurrentUserInformationRequestBody(OpenSilver.Simulator.LicensingServiceReference.User user, string sessionGuid) {
            this.user = user;
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ModifyCurrentUserInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ModifyCurrentUserInformationResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponseBody Body;
        
        public ModifyCurrentUserInformationResponse() {
        }
        
        public ModifyCurrentUserInformationResponse(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ModifyCurrentUserInformationResponseBody {
        
        public ModifyCurrentUserInformationResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePassword", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequestBody Body;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ChangePasswordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string oldPassword;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string newPassword;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sessionGuid;
        
        public ChangePasswordRequestBody() {
        }
        
        public ChangePasswordRequestBody(string oldPassword, string newPassword, string sessionGuid) {
            this.oldPassword = oldPassword;
            this.newPassword = newPassword;
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePasswordResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponseBody Body;
        
        public ChangePasswordResponse() {
        }
        
        public ChangePasswordResponse(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ChangePasswordResponseBody {
        
        public ChangePasswordResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetKeysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetKeys", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetKeysRequestBody Body;
        
        public GetKeysRequest() {
        }
        
        public GetKeysRequest(OpenSilver.Simulator.LicensingServiceReference.GetKeysRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetKeysRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public GetKeysRequestBody() {
        }
        
        public GetKeysRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetKeysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetKeysResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetKeysResponseBody Body;
        
        public GetKeysResponse() {
        }
        
        public GetKeysResponse(OpenSilver.Simulator.LicensingServiceReference.GetKeysResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetKeysResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] GetKeysResult;
        
        public GetKeysResponseBody() {
        }
        
        public GetKeysResponseBody(OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] GetKeysResult) {
            this.GetKeysResult = GetKeysResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeactivateKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeactivateKey", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequestBody Body;
        
        public DeactivateKeyRequest() {
        }
        
        public DeactivateKeyRequest(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DeactivateKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string keyID;
        
        public DeactivateKeyRequestBody() {
        }
        
        public DeactivateKeyRequestBody(string keyID) {
            this.keyID = keyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeactivateKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeactivateKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponseBody Body;
        
        public DeactivateKeyResponse() {
        }
        
        public DeactivateKeyResponse(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class DeactivateKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool DeactivateKeyResult;
        
        public DeactivateKeyResponseBody() {
        }
        
        public DeactivateKeyResponseBody(bool DeactivateKeyResult) {
            this.DeactivateKeyResult = DeactivateKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateKey", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequestBody Body;
        
        public ActivateKeyRequest() {
        }
        
        public ActivateKeyRequest(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActivateKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string keyGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string featureID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string computerName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public double versionOnComputerReleaseDate;
        
        public ActivateKeyRequestBody() {
        }
        
        public ActivateKeyRequestBody(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            this.keyGuid = keyGuid;
            this.featureID = featureID;
            this.computerName = computerName;
            this.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponseBody Body;
        
        public ActivateKeyResponse() {
        }
        
        public ActivateKeyResponse(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActivateKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ArrayOfString ActivateKeyResult;
        
        public ActivateKeyResponseBody() {
        }
        
        public ActivateKeyResponseBody(OpenSilver.Simulator.LicensingServiceReference.ArrayOfString ActivateKeyResult) {
            this.ActivateKeyResult = ActivateKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateKey_V2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateKey_V2", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2RequestBody Body;
        
        public ActivateKey_V2Request() {
        }
        
        public ActivateKey_V2Request(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2RequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActivateKey_V2RequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string keyGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string featureID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string computerName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public double versionOnComputerReleaseDate;
        
        public ActivateKey_V2RequestBody() {
        }
        
        public ActivateKey_V2RequestBody(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            this.keyGuid = keyGuid;
            this.featureID = featureID;
            this.computerName = computerName;
            this.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ActivateKey_V2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ActivateKey_V2Response", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2ResponseBody Body;
        
        public ActivateKey_V2Response() {
        }
        
        public ActivateKey_V2Response(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2ResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ActivateKey_V2ResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.KeyActivationResult ActivateKey_V2Result;
        
        public ActivateKey_V2ResponseBody() {
        }
        
        public ActivateKey_V2ResponseBody(OpenSilver.Simulator.LicensingServiceReference.KeyActivationResult ActivateKey_V2Result) {
            this.ActivateKey_V2Result = ActivateKey_V2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckLicenseValidityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckLicenseValidity", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequestBody Body;
        
        public CheckLicenseValidityRequest() {
        }
        
        public CheckLicenseValidityRequest(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckLicenseValidityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid keyGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string computerName;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double versionOnComputerReleaseDate;
        
        public CheckLicenseValidityRequestBody() {
        }
        
        public CheckLicenseValidityRequestBody(System.Guid keyGuid, string computerName, double versionOnComputerReleaseDate) {
            this.keyGuid = keyGuid;
            this.computerName = computerName;
            this.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckLicenseValidityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckLicenseValidityResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponseBody Body;
        
        public CheckLicenseValidityResponse() {
        }
        
        public CheckLicenseValidityResponse(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class CheckLicenseValidityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.KeyValidity CheckLicenseValidityResult;
        
        public CheckLicenseValidityResponseBody() {
        }
        
        public CheckLicenseValidityResponseBody(OpenSilver.Simulator.LicensingServiceReference.KeyValidity CheckLicenseValidityResult) {
            this.CheckLicenseValidityResult = CheckLicenseValidityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTransactions", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequestBody Body;
        
        public GetTransactionsRequest() {
        }
        
        public GetTransactionsRequest(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public GetTransactionsRequestBody() {
        }
        
        public GetTransactionsRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTransactionsResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponseBody Body;
        
        public GetTransactionsResponse() {
        }
        
        public GetTransactionsResponse(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.Transaction[] GetTransactionsResult;
        
        public GetTransactionsResponseBody() {
        }
        
        public GetTransactionsResponseBody(OpenSilver.Simulator.LicensingServiceReference.Transaction[] GetTransactionsResult) {
            this.GetTransactionsResult = GetTransactionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HandlePasswordForgottenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HandlePasswordForgotten", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequestBody Body;
        
        public HandlePasswordForgottenRequest() {
        }
        
        public HandlePasswordForgottenRequest(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HandlePasswordForgottenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string email;
        
        public HandlePasswordForgottenRequestBody() {
        }
        
        public HandlePasswordForgottenRequestBody(string email) {
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HandlePasswordForgottenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HandlePasswordForgottenResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponseBody Body;
        
        public HandlePasswordForgottenResponse() {
        }
        
        public HandlePasswordForgottenResponse(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HandlePasswordForgottenResponseBody {
        
        public HandlePasswordForgottenResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetListOfUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetListOfUsers", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequestBody Body;
        
        public AdminGetListOfUsersRequest() {
        }
        
        public AdminGetListOfUsersRequest(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetListOfUsersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public AdminGetListOfUsersRequestBody() {
        }
        
        public AdminGetListOfUsersRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetListOfUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetListOfUsersResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponseBody Body;
        
        public AdminGetListOfUsersResponse() {
        }
        
        public AdminGetListOfUsersResponse(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetListOfUsersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.User[] AdminGetListOfUsersResult;
        
        public AdminGetListOfUsersResponseBody() {
        }
        
        public AdminGetListOfUsersResponseBody(OpenSilver.Simulator.LicensingServiceReference.User[] AdminGetListOfUsersResult) {
            this.AdminGetListOfUsersResult = AdminGetListOfUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminUpdatePasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminUpdatePassword", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequestBody Body;
        
        public AdminUpdatePasswordRequest() {
        }
        
        public AdminUpdatePasswordRequest(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminUpdatePasswordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string userEmail;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string newPassword;
        
        public AdminUpdatePasswordRequestBody() {
        }
        
        public AdminUpdatePasswordRequestBody(string sessionGuid, string userEmail, string newPassword) {
            this.sessionGuid = sessionGuid;
            this.userEmail = userEmail;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminUpdatePasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminUpdatePasswordResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponseBody Body;
        
        public AdminUpdatePasswordResponse() {
        }
        
        public AdminUpdatePasswordResponse(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminUpdatePasswordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminUpdatePasswordResult;
        
        public AdminUpdatePasswordResponseBody() {
        }
        
        public AdminUpdatePasswordResponseBody(bool AdminUpdatePasswordResult) {
            this.AdminUpdatePasswordResult = AdminUpdatePasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminEditUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminEditUser", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequestBody Body;
        
        public AdminEditUserRequest() {
        }
        
        public AdminEditUserRequest(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminEditUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string formerEmailAddress;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public OpenSilver.Simulator.LicensingServiceReference.User user;
        
        public AdminEditUserRequestBody() {
        }
        
        public AdminEditUserRequestBody(string sessionGuid, string formerEmailAddress, OpenSilver.Simulator.LicensingServiceReference.User user) {
            this.sessionGuid = sessionGuid;
            this.formerEmailAddress = formerEmailAddress;
            this.user = user;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminEditUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminEditUserResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponseBody Body;
        
        public AdminEditUserResponse() {
        }
        
        public AdminEditUserResponse(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminEditUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminEditUserResult;
        
        public AdminEditUserResponseBody() {
        }
        
        public AdminEditUserResponseBody(bool AdminEditUserResult) {
            this.AdminEditUserResult = AdminEditUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminCreateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminCreateUser", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequestBody Body;
        
        public AdminCreateUserRequest() {
        }
        
        public AdminCreateUserRequest(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminCreateUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public OpenSilver.Simulator.LicensingServiceReference.User user;
        
        public AdminCreateUserRequestBody() {
        }
        
        public AdminCreateUserRequestBody(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user) {
            this.sessionGuid = sessionGuid;
            this.user = user;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminCreateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminCreateUserResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponseBody Body;
        
        public AdminCreateUserResponse() {
        }
        
        public AdminCreateUserResponse(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminCreateUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminCreateUserResult;
        
        public AdminCreateUserResponseBody() {
        }
        
        public AdminCreateUserResponseBody(bool AdminCreateUserResult) {
            this.AdminCreateUserResult = AdminCreateUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetKeysRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetKeys", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequestBody Body;
        
        public AdminGetKeysRequest() {
        }
        
        public AdminGetKeysRequest(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetKeysRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string userEmail;
        
        public AdminGetKeysRequestBody() {
        }
        
        public AdminGetKeysRequestBody(string sessionGuid, string userEmail) {
            this.sessionGuid = sessionGuid;
            this.userEmail = userEmail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetKeysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetKeysResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponseBody Body;
        
        public AdminGetKeysResponse() {
        }
        
        public AdminGetKeysResponse(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetKeysResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] AdminGetKeysResult;
        
        public AdminGetKeysResponseBody() {
        }
        
        public AdminGetKeysResponseBody(OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] AdminGetKeysResult) {
            this.AdminGetKeysResult = AdminGetKeysResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetTransactions", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequestBody Body;
        
        public AdminGetTransactionsRequest() {
        }
        
        public AdminGetTransactionsRequest(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetTransactionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string userEmail;
        
        public AdminGetTransactionsRequestBody() {
        }
        
        public AdminGetTransactionsRequestBody(string sessionGuid, string userEmail) {
            this.sessionGuid = sessionGuid;
            this.userEmail = userEmail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetTransactionsResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponseBody Body;
        
        public AdminGetTransactionsResponse() {
        }
        
        public AdminGetTransactionsResponse(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetTransactionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.Transaction[] AdminGetTransactionsResult;
        
        public AdminGetTransactionsResponseBody() {
        }
        
        public AdminGetTransactionsResponseBody(OpenSilver.Simulator.LicensingServiceReference.Transaction[] AdminGetTransactionsResult) {
            this.AdminGetTransactionsResult = AdminGetTransactionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDeactivateKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminDeactivateKey", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequestBody Body;
        
        public AdminDeactivateKeyRequest() {
        }
        
        public AdminDeactivateKeyRequest(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminDeactivateKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey key;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string userEmail;
        
        public AdminDeactivateKeyRequestBody() {
        }
        
        public AdminDeactivateKeyRequestBody(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key, string userEmail) {
            this.sessionGuid = sessionGuid;
            this.key = key;
            this.userEmail = userEmail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDeactivateKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminDeactivateKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponseBody Body;
        
        public AdminDeactivateKeyResponse() {
        }
        
        public AdminDeactivateKeyResponse(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminDeactivateKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminDeactivateKeyResult;
        
        public AdminDeactivateKeyResponseBody() {
        }
        
        public AdminDeactivateKeyResponseBody(bool AdminDeactivateKeyResult) {
            this.AdminDeactivateKeyResult = AdminDeactivateKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminCreateKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminCreateKey", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequestBody Body;
        
        public AdminCreateKeyRequest() {
        }
        
        public AdminCreateKeyRequest(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminCreateKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public OpenSilver.Simulator.LicensingServiceReference.User user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey key;
        
        public AdminCreateKeyRequestBody() {
        }
        
        public AdminCreateKeyRequestBody(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            this.sessionGuid = sessionGuid;
            this.user = user;
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminCreateKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminCreateKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponseBody Body;
        
        public AdminCreateKeyResponse() {
        }
        
        public AdminCreateKeyResponse(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminCreateKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminCreateKeyResult;
        
        public AdminCreateKeyResponseBody() {
        }
        
        public AdminCreateKeyResponseBody(bool AdminCreateKeyResult) {
            this.AdminCreateKeyResult = AdminCreateKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminEditKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminEditKey", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequestBody Body;
        
        public AdminEditKeyRequest() {
        }
        
        public AdminEditKeyRequest(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminEditKeyRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string formerKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public OpenSilver.Simulator.LicensingServiceReference.User user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey key;
        
        public AdminEditKeyRequestBody() {
        }
        
        public AdminEditKeyRequestBody(string sessionGuid, string formerKey, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            this.sessionGuid = sessionGuid;
            this.formerKey = formerKey;
            this.user = user;
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminEditKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminEditKeyResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponseBody Body;
        
        public AdminEditKeyResponse() {
        }
        
        public AdminEditKeyResponse(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminEditKeyResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AdminEditKeyResult;
        
        public AdminEditKeyResponseBody() {
        }
        
        public AdminEditKeyResponseBody(bool AdminEditKeyResult) {
            this.AdminEditKeyResult = AdminEditKeyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetActivityLogsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetActivityLogs", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequestBody Body;
        
        public AdminGetActivityLogsRequest() {
        }
        
        public AdminGetActivityLogsRequest(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetActivityLogsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionGuid;
        
        public AdminGetActivityLogsRequestBody() {
        }
        
        public AdminGetActivityLogsRequestBody(string sessionGuid) {
            this.sessionGuid = sessionGuid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminGetActivityLogsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AdminGetActivityLogsResponse", Namespace="http://tempuri.org/", Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponseBody Body;
        
        public AdminGetActivityLogsResponse() {
        }
        
        public AdminGetActivityLogsResponse(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AdminGetActivityLogsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public OpenSilver.Simulator.LicensingServiceReference.ActivityLog[] AdminGetActivityLogsResult;
        
        public AdminGetActivityLogsResponseBody() {
        }
        
        public AdminGetActivityLogsResponseBody(OpenSilver.Simulator.LicensingServiceReference.ActivityLog[] AdminGetActivityLogsResult) {
            this.AdminGetActivityLogsResult = AdminGetActivityLogsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicensingServiceChannel : OpenSilver.Simulator.LicensingServiceReference.ILicensingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicensingServiceClient : System.ServiceModel.ClientBase<OpenSilver.Simulator.LicensingServiceReference.ILicensingService>, OpenSilver.Simulator.LicensingServiceReference.ILicensingService {
        
        public LicensingServiceClient() {
        }
        
        public LicensingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicensingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicensingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.LogInResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.LogIn(OpenSilver.Simulator.LicensingServiceReference.LogInRequest request) {
            return base.Channel.LogIn(request);
        }
        
        public string LogIn(string username, string password) {
            OpenSilver.Simulator.LicensingServiceReference.LogInRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.LogInRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.LogInRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            OpenSilver.Simulator.LicensingServiceReference.LogInResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).LogIn(inValue);
            return retVal.Body.LogInResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogInResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.LogInAsync(OpenSilver.Simulator.LicensingServiceReference.LogInRequest request) {
            return base.Channel.LogInAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogInResponse> LogInAsync(string username, string password) {
            OpenSilver.Simulator.LicensingServiceReference.LogInRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.LogInRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.LogInRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).LogInAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.LogOutResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.LogOut(OpenSilver.Simulator.LicensingServiceReference.LogOutRequest request) {
            return base.Channel.LogOut(request);
        }
        
        public void LogOut(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.LogOutRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.LogOutRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.LogOutRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.LogOutResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).LogOut(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogOutResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.LogOutAsync(OpenSilver.Simulator.LicensingServiceReference.LogOutRequest request) {
            return base.Channel.LogOutAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.LogOutResponse> LogOutAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.LogOutRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.LogOutRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.LogOutRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).LogOutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetCurrentUserInformation(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest request) {
            return base.Channel.GetCurrentUserInformation(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.User GetCurrentUserInformation(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetCurrentUserInformation(inValue);
            return retVal.Body.GetCurrentUserInformationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetCurrentUserInformationAsync(OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest request) {
            return base.Channel.GetCurrentUserInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationResponse> GetCurrentUserInformationAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetCurrentUserInformationRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetCurrentUserInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ModifyCurrentUserInformation(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest request) {
            return base.Channel.ModifyCurrentUserInformation(request);
        }
        
        public void ModifyCurrentUserInformation(OpenSilver.Simulator.LicensingServiceReference.User user, string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequestBody();
            inValue.Body.user = user;
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ModifyCurrentUserInformation(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ModifyCurrentUserInformationAsync(OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest request) {
            return base.Channel.ModifyCurrentUserInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationResponse> ModifyCurrentUserInformationAsync(OpenSilver.Simulator.LicensingServiceReference.User user, string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ModifyCurrentUserInformationRequestBody();
            inValue.Body.user = user;
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ModifyCurrentUserInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ChangePassword(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public void ChangePassword(string oldPassword, string newPassword, string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequestBody();
            inValue.Body.oldPassword = oldPassword;
            inValue.Body.newPassword = newPassword;
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ChangePassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ChangePasswordAsync(OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ChangePasswordResponse> ChangePasswordAsync(string oldPassword, string newPassword, string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ChangePasswordRequestBody();
            inValue.Body.oldPassword = oldPassword;
            inValue.Body.newPassword = newPassword;
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetKeys(OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest request) {
            return base.Channel.GetKeys(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] GetKeys(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetKeysRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetKeys(inValue);
            return retVal.Body.GetKeysResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetKeysAsync(OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest request) {
            return base.Channel.GetKeysAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetKeysResponse> GetKeysAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetKeysRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetKeysRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetKeysAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.DeactivateKey(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest request) {
            return base.Channel.DeactivateKey(request);
        }
        
        public bool DeactivateKey(string keyID) {
            OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequestBody();
            inValue.Body.keyID = keyID;
            OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).DeactivateKey(inValue);
            return retVal.Body.DeactivateKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.DeactivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest request) {
            return base.Channel.DeactivateKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyResponse> DeactivateKeyAsync(string keyID) {
            OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.DeactivateKeyRequestBody();
            inValue.Body.keyID = keyID;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).DeactivateKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ActivateKey(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest request) {
            return base.Channel.ActivateKey(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.ArrayOfString ActivateKey(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.featureID = featureID;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ActivateKey(inValue);
            return retVal.Body.ActivateKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ActivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest request) {
            return base.Channel.ActivateKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKeyResponse> ActivateKeyAsync(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ActivateKeyRequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.featureID = featureID;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ActivateKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ActivateKey_V2(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request request) {
            return base.Channel.ActivateKey_V2(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.KeyActivationResult ActivateKey_V2(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request inValue = new OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2RequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.featureID = featureID;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ActivateKey_V2(inValue);
            return retVal.Body.ActivateKey_V2Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.ActivateKey_V2Async(OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request request) {
            return base.Channel.ActivateKey_V2Async(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Response> ActivateKey_V2Async(string keyGuid, string featureID, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request inValue = new OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2Request();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.ActivateKey_V2RequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.featureID = featureID;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).ActivateKey_V2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.CheckLicenseValidity(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest request) {
            return base.Channel.CheckLicenseValidity(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.KeyValidity CheckLicenseValidity(System.Guid keyGuid, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).CheckLicenseValidity(inValue);
            return retVal.Body.CheckLicenseValidityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.CheckLicenseValidityAsync(OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest request) {
            return base.Channel.CheckLicenseValidityAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityResponse> CheckLicenseValidityAsync(System.Guid keyGuid, string computerName, double versionOnComputerReleaseDate) {
            OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.CheckLicenseValidityRequestBody();
            inValue.Body.keyGuid = keyGuid;
            inValue.Body.computerName = computerName;
            inValue.Body.versionOnComputerReleaseDate = versionOnComputerReleaseDate;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).CheckLicenseValidityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetTransactions(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest request) {
            return base.Channel.GetTransactions(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.Transaction[] GetTransactions(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetTransactions(inValue);
            return retVal.Body.GetTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.GetTransactionsAsync(OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest request) {
            return base.Channel.GetTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.GetTransactionsResponse> GetTransactionsAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.GetTransactionsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).GetTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.HandlePasswordForgotten(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest request) {
            return base.Channel.HandlePasswordForgotten(request);
        }
        
        public void HandlePasswordForgotten(string email) {
            OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequestBody();
            inValue.Body.email = email;
            OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).HandlePasswordForgotten(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.HandlePasswordForgottenAsync(OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest request) {
            return base.Channel.HandlePasswordForgottenAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenResponse> HandlePasswordForgottenAsync(string email) {
            OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.HandlePasswordForgottenRequestBody();
            inValue.Body.email = email;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).HandlePasswordForgottenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetListOfUsers(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest request) {
            return base.Channel.AdminGetListOfUsers(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.User[] AdminGetListOfUsers(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetListOfUsers(inValue);
            return retVal.Body.AdminGetListOfUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetListOfUsersAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest request) {
            return base.Channel.AdminGetListOfUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersResponse> AdminGetListOfUsersAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetListOfUsersRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetListOfUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminUpdatePassword(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest request) {
            return base.Channel.AdminUpdatePassword(request);
        }
        
        public bool AdminUpdatePassword(string sessionGuid, string userEmail, string newPassword) {
            OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            inValue.Body.newPassword = newPassword;
            OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminUpdatePassword(inValue);
            return retVal.Body.AdminUpdatePasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminUpdatePasswordAsync(OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest request) {
            return base.Channel.AdminUpdatePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordResponse> AdminUpdatePasswordAsync(string sessionGuid, string userEmail, string newPassword) {
            OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminUpdatePasswordRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            inValue.Body.newPassword = newPassword;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminUpdatePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminEditUser(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest request) {
            return base.Channel.AdminEditUser(request);
        }
        
        public bool AdminEditUser(string sessionGuid, string formerEmailAddress, OpenSilver.Simulator.LicensingServiceReference.User user) {
            OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.formerEmailAddress = formerEmailAddress;
            inValue.Body.user = user;
            OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminEditUser(inValue);
            return retVal.Body.AdminEditUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminEditUserAsync(OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest request) {
            return base.Channel.AdminEditUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditUserResponse> AdminEditUserAsync(string sessionGuid, string formerEmailAddress, OpenSilver.Simulator.LicensingServiceReference.User user) {
            OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminEditUserRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.formerEmailAddress = formerEmailAddress;
            inValue.Body.user = user;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminEditUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminCreateUser(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest request) {
            return base.Channel.AdminCreateUser(request);
        }
        
        public bool AdminCreateUser(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user) {
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.user = user;
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminCreateUser(inValue);
            return retVal.Body.AdminCreateUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminCreateUserAsync(OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest request) {
            return base.Channel.AdminCreateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserResponse> AdminCreateUserAsync(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user) {
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateUserRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.user = user;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminCreateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetKeys(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest request) {
            return base.Channel.AdminGetKeys(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.LicenseKey[] AdminGetKeys(string sessionGuid, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetKeys(inValue);
            return retVal.Body.AdminGetKeysResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetKeysAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest request) {
            return base.Channel.AdminGetKeysAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysResponse> AdminGetKeysAsync(string sessionGuid, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetKeysRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetKeysAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetTransactions(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest request) {
            return base.Channel.AdminGetTransactions(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.Transaction[] AdminGetTransactions(string sessionGuid, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetTransactions(inValue);
            return retVal.Body.AdminGetTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetTransactionsAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest request) {
            return base.Channel.AdminGetTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsResponse> AdminGetTransactionsAsync(string sessionGuid, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetTransactionsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.userEmail = userEmail;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminDeactivateKey(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest request) {
            return base.Channel.AdminDeactivateKey(request);
        }
        
        public bool AdminDeactivateKey(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.key = key;
            inValue.Body.userEmail = userEmail;
            OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminDeactivateKey(inValue);
            return retVal.Body.AdminDeactivateKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminDeactivateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest request) {
            return base.Channel.AdminDeactivateKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyResponse> AdminDeactivateKeyAsync(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key, string userEmail) {
            OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminDeactivateKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.key = key;
            inValue.Body.userEmail = userEmail;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminDeactivateKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminCreateKey(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest request) {
            return base.Channel.AdminCreateKey(request);
        }
        
        public bool AdminCreateKey(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.user = user;
            inValue.Body.key = key;
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminCreateKey(inValue);
            return retVal.Body.AdminCreateKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminCreateKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest request) {
            return base.Channel.AdminCreateKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyResponse> AdminCreateKeyAsync(string sessionGuid, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminCreateKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.user = user;
            inValue.Body.key = key;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminCreateKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminEditKey(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest request) {
            return base.Channel.AdminEditKey(request);
        }
        
        public bool AdminEditKey(string sessionGuid, string formerKey, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.formerKey = formerKey;
            inValue.Body.user = user;
            inValue.Body.key = key;
            OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminEditKey(inValue);
            return retVal.Body.AdminEditKeyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminEditKeyAsync(OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest request) {
            return base.Channel.AdminEditKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyResponse> AdminEditKeyAsync(string sessionGuid, string formerKey, OpenSilver.Simulator.LicensingServiceReference.User user, OpenSilver.Simulator.LicensingServiceReference.LicenseKey key) {
            OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminEditKeyRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            inValue.Body.formerKey = formerKey;
            inValue.Body.user = user;
            inValue.Body.key = key;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminEditKeyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetActivityLogs(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest request) {
            return base.Channel.AdminGetActivityLogs(request);
        }
        
        public OpenSilver.Simulator.LicensingServiceReference.ActivityLog[] AdminGetActivityLogs(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse retVal = ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetActivityLogs(inValue);
            return retVal.Body.AdminGetActivityLogsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse> OpenSilver.Simulator.LicensingServiceReference.ILicensingService.AdminGetActivityLogsAsync(OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest request) {
            return base.Channel.AdminGetActivityLogsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsResponse> AdminGetActivityLogsAsync(string sessionGuid) {
            OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest inValue = new OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequest();
            inValue.Body = new OpenSilver.Simulator.LicensingServiceReference.AdminGetActivityLogsRequestBody();
            inValue.Body.sessionGuid = sessionGuid;
            return ((OpenSilver.Simulator.LicensingServiceReference.ILicensingService)(this)).AdminGetActivityLogsAsync(inValue);
        }
    }
}
